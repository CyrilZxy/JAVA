/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public String tree2str(TreeNode t) {
        StringBuilder sb=new StringBuilder();
        tree2strchild(t,sb);
        return sb.toString();

    }
    public void tree2strchild(TreeNode t,StringBuilder sb) {
        if(t==null){
            return;
        }

        sb.append(t.val);

        if(t.left==null){
            if(t.right==null){
                return;
            }
            else{
                sb.append("()");
            }
        }else{
            sb.append("(");
            tree2strchild(t.left,sb);
            sb.append(")");
        }

        //
        if(t.right==null){
            return;
        }
        else{
            sb.append("(");
            tree2strchild(t.right,sb);
            sb.append(")");
        }

     

    }
}