import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;


class Person implements Comparable<Person>{
    public String name;
    public int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }

    @Override
    public int compareTo(Person o) {
        //return this.age - o.age;
        return this.name.compareTo(o.name);
    }
}
class Person1 {
    public String name;
    public int age;

    public Person1(String name, int age) {
        this.name = name;
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person1{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}

class ComparatorByAge implements Comparator<Person1> {

    @Override
    public int compare(Person1 o1, Person1 o2) {
        if (o1 == o2) {
            return 0;
        }
        if (o1 == null) {
            return -1;
        }
        if (o2 == null) {
            return 1;
        }
        return o1.age - o2.age;
    }
}
class ComparatorByName implements Comparator<Person1> {

    @Override
    public int compare(Person1 o1, Person1 o2) {
        if (o1 == o2) {
            return 0;
        }
        if (o1 == null) {
            return -1;
        }
        if (o2 == null) {
            return 1;
        }
        return o1.name.compareTo(o2.name);
    }
}

class Student {
    public String name;

    public Student(String name) {
        this.name = name;
    }
    @Override
    public boolean equals(Object obj) {
        if(obj == this) return true;
        if(obj instanceof Student) {
            Student student = (Student) obj;
            return this.name.equals(student.name);
        }
        return false;
    }
}

public class Card {

    public static void main(String[] args) {
        List<Student> list = new ArrayList<>();

        Student student1 = new Student("gaobo");
        Student student2 = new Student("gaobo");

        list.add(student1);

        System.out.println(list.contains(student2));
    }

    public static void main3(String[] args) {
        Person1[] people = new Person1[3];
        people[0] = new Person1("wangfei",87);
        people[1] = new Person1("zhangfei",19);
        people[2] = new Person1("angbai",38);

        ComparatorByAge comparatorByAge = new ComparatorByAge();

        ComparatorByName comparatorByName = new ComparatorByName();

        Arrays.sort(people,comparatorByName);

        System.out.println(Arrays.toString(people));
    }

    public static void main2(String[] args) {
        Person[] people = new Person[3];
        people[0] = new Person("wangfei",87);
        people[1] = new Person("zhangfei",19);
        people[2] = new Person("angbai",38);

        Arrays.sort(people);

        System.out.println(Arrays.toString(people));

    }

    public int rank; // 数值
    public String suit; // 花色
    public Card(int rank, String suit) {
        this.rank = rank;
        this.suit = suit;
    }

    @Override
    public boolean equals(Object obj) {
        if(this == obj) {
            return true;
        }
        if(!(obj instanceof Card)) {
            return false;
        }

        Card card = (Card) obj;
        return
                rank == card.rank && suit.equals(card.suit);
    }

    public static void main1(String[] args) {
        Card card1 = new Card(1,"♠");
        Card card2 = new Card(1,"♠");

        System.out.println(card1 == card2);
        System.out.println(card1.equals(card2));
    }
}
