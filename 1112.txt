


//找相交点
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA == null || headB == null) {
            return null;
        }

        ListNode pL = headA;//永远指向长的单链表
        ListNode pS = headB;//永远指向短的单链表

        int lenA = 0;
        int lenB = 0;

        //求的lenA  lenB
        while (pL != null) {
            lenA++;
            pL = pL.next;
        }
        while (pS!=null){
            lenB++;
            pS=pS.next;
        }
        pL=headA;
        pS=headB;

        //差值-》最长的单链表先走len步
        int len = lenA-lenB;
        if(len < 0) {
            pL = headB;
            pS = headA;
            len = lenB-lenA;
        }

        //让pL先走len步
        while(len>0) {
            pL=pL.next;
            len--;
        }

        //开始一起走  (pL  != pS ) {一人一步走}
        while (pL!=pS && pL!=null && pS!=null){
            pL=pL.next;
            pS=pS.next;
        }

            return pL;
    }