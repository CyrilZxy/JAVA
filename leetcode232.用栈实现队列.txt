import java.util.Stack;

class MyQueue {

    private Stack<Integer> s1;
    private Stack<Integer> s2;
    private int usedsize;


    /** Initialize your data structure here. */
    public MyQueue() {
        this.s1=new Stack<>();
        this.s2=new Stack<>();
        this.usedsize=0;
    }
    
    //入队
    public void push(int x) {
        s1.push(x);
        usedsize++;
    }
    
    //出队
    public int pop() {
        int out;
        //栈2为空，将栈1元素全部放入，再出栈2
        if(s2.isEmpty()){
            while(!s1.isEmpty()){
                s2.push(s1.pop());
            }
            out=s2.pop();
        }
        //栈2不为空，直接出栈2
        else{
            out=s2.pop();
        }
        usedsize--;
        return out;
    }
    

    //peek
    public int peek() {
        int out;
        //栈2为空，将栈1元素全部放入，再出栈2
        if(s2.isEmpty()){
            while(s1.isEmpty()==false){
                s2.push(s1.pop());
            }
            out=s2.peek();
        }
        //栈2不为空，直接出栈2
        else{
            out=s2.peek();
        }

        return out;
    }
    

    /** Returns whether the queue is empty. */
    public boolean empty() {
        if(usedsize==0){
            return true;
        }
        return false;
    }

}
