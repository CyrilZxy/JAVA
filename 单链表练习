/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
        
        if(pHead1==null||pHead2==null){
            return null;
        }
        
        ListNode cur1=pHead1;    
        ListNode cur2=pHead2;    
        
        int len1=0;
        int len2=0;
        
        while(cur1!=null){        //计算两链表长度
            len1=len1+1;
            cur1=cur1.next;
        }
        while(cur2!=null){
            len2=len2+1;
            cur2=cur2.next;
        }
        
        ListNode LL=pHead1;        //长的链表头给longlist，短的头给shortlist
        ListNode SS=pHead1;
        
        int len=0;                               //并计算相差长度len
        if(len1<=len2){
            len=len2-len1;
            SS=pHead1;
            LL=pHead2;
        }else{
            len=len1-len2;
            SS=pHead2;
            LL=pHead1;
        }
        
        while(len!=0){
            LL=LL.next;
            len=len-1;
        }
        
       while(LL!=SS&&LL!=null){
            LL=LL.next;
            SS=SS.next;
        }
         
        return LL;
  
    }
}
